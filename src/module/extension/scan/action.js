var _fs=require("fs"),_path=require("path"),_log=catrequire("cat.global").log(),_utils=catrequire("cat.utils"),_props=catrequire("cat.props"),_basePlugin=require("./../Base.js");module.exports=_basePlugin.ext(function(){var t,e=this,i=function(){t.emit("job.done",{status:"done"})},r=function(e){t.emit("scan.init",{path:e});var i=function(e,r){var n=[];_fs.readdir(e,function(a,o){if(a)return r(a);var s=0;!function c(){var a=o[s++];return a?(a=e+"/"+a,a=a.split("//").join("/"),void _fs.stat(a,function(e,r){r&&r.isDirectory()?(t.emit("scan.folder",a),i(a,function(){c()})):(t.emit("scan.file",a),n.push(a),c())})):r(null,n)}()})};i(e,function(e,i){if(t.emit("scan.done",{results:i}),e)throw t.emit("scan.error",{error:e}),t.emit("job.done",{status:"error",error:e}),e})},n={watch:function(t){console.log("scean: ",t);var i,r,n=t.internalConfig,a=e.getEmitter(),o=n.getWatch();i=t.path=o.get("file"),r=o.get("stat"),a.emit("scan.init",{path:_path.dirname(i)}),r&&r.isDirectory()?(a.emit("scan.folder",i),_log.debug("[SCAN] folder: "+i)):(a.emit("scan.file",i),_log.debug("[SCAN] file: "+i+"; ext: "+_path.extname(i))),a.emit("job.done",{status:"done"})},apply:function(t){var i,n;e.apply(t),n=e._data,i=n.path?n.path:t.path,i||_utils.error(_props.get("cat.error.config").format("[scan ext]")),r(i)},init:function(r,n){e.initialize(r,n),t=e.getEmitter(),t.on("job.wait",i)}};return n});