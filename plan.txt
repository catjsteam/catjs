
What's next OR future wishes
===============================


Next
====
1) Add Mock Data facilitation

2) Scrap Manager
    2.1) Runnable for other scraps
    2.2) Behavior of other scraps
    2.3) TBD

3) Rename all .html files generated for the 'src' folder. Change it to .js files

4) Make JSON validation for catproject.json

5) Make CAT available as a module e.g. require("cat")



Log
=======

1) Improve CAT parser to be able to parse the annotation more smoothly

2) Add scrap behavior
    2.1) Add Alias names - e.g. Scrap added with name "code" but the same behaviour goes to "foo" as well.
    2.2) Scrap lifecycle printing - since the scrap attributes can be randomly ordered we need to
        setup some kind of lifecycle for printing. Init, run...
        A solution can be: template for the scrap which will be passed to all of the scrap behaviors (properties)
        Each one will set its values and it will be inject as a whole.

3) Run Standalone functionality that are not dependent by context variables.

4) Assert should "understand" a custom user functionality by name and execute it.

5) Scenario methodology implementation

6) Flow Manager implementation

7) CAT test project implementation

8) CAT runner implementation

9) add package name utility from within the ScrapItem

10) scrap annotations method names should not be the same as the private,
    or we can use '_' as prefix for private methods.

11) ScrapItem should be on the browser as well for instantiating Scrap class.